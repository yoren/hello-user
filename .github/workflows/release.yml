# This snippet is adapted from graphql-api-for-wp.
#
# GitHub Action: whenever creating a new release of the source code,
# also create a release of the installable plugin.
# Steps to execute:
# - Checkout the source code
# - Create a .zip file, excluding:
#   - All hidden files (.git, .gitignore, etc)
#   - All development files, ending in .dist
#   - All composer files <= after installing dependencies, no need for them anymore
#   - Markdown files concerning development
#   - Folder build/ <= created only to store the .zip file
#   - Folder tests/ <= not needed for the plugin
# - Upload the .zip file as an artifact to the action (this step is possibly optional)
# - Upload the .zip file as a release, for download
name: Generate Installable Plugin, and Upload as Release Asset
on:
  release:
    types: [published]
jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer:v2

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "--no-progress --no-ansi --no-interaction --no-dev --no-scripts"
          ignore-cache: "yes"

      - name: Build project
        run: |
          npm install
          npm run build
          rm -rf node_modules
          mkdir hello-user
          rsync -a ./ ./hello-user --exclude hello-user
          mkdir artifact
      - name: Create artifact
        uses: montudor/action-zip@v1
        with:
          args: zip -X -r artifact/hello-user-${{ github.event.release.tag_name }}.zip hello-user -x *.git* node_modules/\* .* "*/\.*" CODE_OF_CONDUCT.md CONTRIBUTING.md ISSUE_TEMPLATE.md PULL_REQUEST_TEMPLATE.md *.dist *composer.* *tests** *vendor* *src* *package* *.cache*
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: hello-user
          path: artifact/hello-user-${{ github.event.release.tag_name }}.zip
      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: artifact/hello-user-${{ github.event.release.tag_name }}.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
